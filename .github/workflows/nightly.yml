name: Nightly Development Builds

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no changes'
        required: false
        default: 'false'
        type: boolean

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3072m -Dorg.gradle.daemon=false -Dkotlin.incremental=false"
  JAVA_VERSION: '17'
  RUST_VERSION: '1.75.0'
  GO_VERSION: '1.21'
  PYTHON_VERSION: '3.11'
  ANDROID_API_LEVEL: 35

jobs:
  check-changes:
    name: 🔍 Check for Changes
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.changes.outputs.has-changes }}
      last-commit: ${{ steps.changes.outputs.last-commit }}
      
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔍 Check for changes in last 24 hours
      id: changes
      run: |
        LAST_COMMIT=$(git log --since="24 hours ago" --oneline | wc -l)
        LATEST_COMMIT_HASH=$(git rev-parse --short HEAD)
        
        echo "last-commit=$LATEST_COMMIT_HASH" >> $GITHUB_OUTPUT
        
        if [ "$LAST_COMMIT" -gt 0 ] || [ "${{ github.event.inputs.force_build }}" == "true" ]; then
          echo "has-changes=true" >> $GITHUB_OUTPUT
          echo "📈 Found $LAST_COMMIT commits in the last 24 hours"
        else
          echo "has-changes=false" >> $GITHUB_OUTPUT
          echo "📊 No changes found in the last 24 hours"
        fi

  nightly-build:
    name: 🌙 Nightly Build
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.has-changes == 'true'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: 🛠️ Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Setup NDK
      run: |
        sdkmanager "ndk;26.1.10909125"
        echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/26.1.10909125" >> $GITHUB_ENV
        
    - name: 🦀 Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: |
          aarch64-linux-android
          armv7-linux-androideabi
          x86_64-linux-android
          i686-linux-android
          
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.cargo/registry
          ~/.cargo/git
          rust-core/target
        key: nightly-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/Cargo.lock') }}
        
    - name: 🔧 Make scripts executable
      run: |
        chmod +x gradlew
        chmod +x android-setup.sh
        chmod +x build-verify.sh
        chmod +x rust-core/build-android.sh
        
    - name: 🏗️ Build Rust core
      run: |
        cd rust-core
        ./build-android.sh
        
    - name: 🧪 Quick tests
      run: ./gradlew testDebugUnitTest
      
    - name: 📱 Build debug APK
      run: ./gradlew assembleDebug
      
    - name: 🔍 Verify build
      run: ./build-verify.sh
      
    - name: 📝 Generate nightly version info
      run: |
        DATE=$(date +'%Y%m%d')
        COMMIT=${{ needs.check-changes.outputs.last-commit }}
        echo "NIGHTLY_VERSION=nightly-$DATE-$COMMIT" >> $GITHUB_ENV
        
        cat > nightly-info.json << EOF
        {
          "version": "nightly-$DATE-$COMMIT",
          "build_date": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')",
          "git_commit": "$COMMIT",
          "type": "nightly",
          "android_api": ${{ env.ANDROID_API_LEVEL }},
          "java_version": "${{ env.JAVA_VERSION }}"
        }
        EOF
        
    - name: 📦 Upload nightly artifacts
      uses: actions/upload-artifact@v3
      with:
        name: termux-ultra-nightly-${{ env.NIGHTLY_VERSION }}
        path: |
          app/build/outputs/apk/debug/*.apk
          nightly-info.json
        retention-days: 7
        
    - name: 💬 Nightly build notification
      if: env.DISCORD_WEBHOOK_URL != ''
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"embeds\": [{\"color\": 5793266, \"title\": \"🌙 Nightly Build Ready\", \"description\": \"Termux-Ultra ${{ env.NIGHTLY_VERSION }} available for testing\", \"url\": \"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}]}" \
             $DISCORD_WEBHOOK_URL

  cleanup:
    name: 🧹 Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 🗑️ Delete old nightly artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
        name: termux-ultra-nightly-*
        skipIfNoMatchingArtifacts: 'true'
        useGlob: true
        retentionDays: 7